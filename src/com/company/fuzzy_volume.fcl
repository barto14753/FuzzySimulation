FUNCTION_BLOCK VOLUME

VAR_INPUT
poziom_natezenia : REAL;
pora_dnia : REAL;
END_VAR
VAR_OUTPUT
zmiana_natezenia : REAL;
END_VAR

FUZZIFY poziom_natezenia
TERM bardzoCicho := (0, 1) (10, 1) (20, 0.50) (30, 0);
TERM cicho := (10, 0) (20, 0.50) (30, 1) (40, 1) (50, 0.50) (60, 0);
TERM glosno := (40, 0) (50, 0.50) (60, 1) (70, 1) (80, 0.50) (90, 0);
TERM bardzoGlosno := (70, 0) (80, 0.50) (90, 1) (100, 1);
END_FUZZIFY

FUZZIFY pora_dnia
TERM ranek := (1, 0) (3, 0.50) (5, 1) (7, 1) (9, 0.50) (11, 0);
TERM poludnie := (7, 0) (9, 0.50) (11, 1) (13, 1) (15, 0.50) (17, 0);
TERM wieczor := (13, 0) (15, 0.50) (17, 1) (19, 1) (21, 0.50) (23, 0);
TERM noc := (0,1) (1, 1) (3, 0.50) (5, 0) (19, 0) (21, 0.50) (23, 1);
END_FUZZIFY

DEFUZZIFY zmiana_natezenia
TERM przycisz := (0, 1) (2, 1) (3, 0.50) (4, 0) (7, 0);
TERM zostaw := (2, 0) (3, 0.50) (4, 1) (6, 1) (7, 0.50) (8, 0);
TERM podglosnij := (3, 0) (6, 0) (7, 0.50) (8, 1) (10, 1);
METHOD : COG;
DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK first
    AND: MIN;
    ACT: MIN;

    RULE 0: IF poziom_natezenia IS bardzoCicho AND pora_dnia IS ranek THEN zmiana_natezenia IS podglosnij;
    RULE 1: IF poziom_natezenia IS cicho AND pora_dnia IS ranek THEN zmiana_natezenia IS zostaw;
    RULE 2: IF poziom_natezenia IS glosno AND pora_dnia IS ranek THEN zmiana_natezenia IS zostaw;
    RULE 3: IF poziom_natezenia IS bardzoGlosno AND pora_dnia IS ranek THEN zmiana_natezenia IS przycisz;

    RULE 4: IF poziom_natezenia IS bardzoCicho AND pora_dnia IS poludnie THEN zmiana_natezenia IS podglosnij;
    RULE 5: IF poziom_natezenia IS cicho AND pora_dnia IS poludnie THEN zmiana_natezenia IS podglosnij;
    RULE 6: IF poziom_natezenia IS glosno AND pora_dnia IS poludnie THEN zmiana_natezenia IS zostaw;
    RULE 7: IF poziom_natezenia IS bardzoGlosno AND pora_dnia IS poludnie THEN zmiana_natezenia IS przycisz;

    RULE 8: IF poziom_natezenia IS bardzoCicho AND pora_dnia IS wieczor THEN zmiana_natezenia IS podglosnij;
    RULE 9: IF poziom_natezenia IS cicho AND pora_dnia IS wieczor THEN zmiana_natezenia IS zostaw;
    RULE 10: IF poziom_natezenia IS glosno AND pora_dnia IS wieczor THEN zmiana_natezenia IS przycisz;
    RULE 11: IF poziom_natezenia IS bardzoGlosno AND pora_dnia IS wieczor THEN zmiana_natezenia IS przycisz;

    RULE 12: IF poziom_natezenia IS bardzoCicho AND pora_dnia IS noc THEN zmiana_natezenia IS zostaw;
    RULE 13: IF poziom_natezenia IS cicho AND pora_dnia IS noc THEN zmiana_natezenia IS zostaw;
    RULE 14: IF poziom_natezenia IS glosno AND pora_dnia IS noc THEN zmiana_natezenia IS przycisz;
    RULE 15: IF poziom_natezenia IS bardzoGlosno AND pora_dnia IS noc THEN zmiana_natezenia IS przycisz;

END_RULEBLOCK

END_FUNCTION_BLOCK


    RULE 0: IF car_position IS very_left AND first_car_position IS far_left THEN move IS keep;
    RULE 1: IF car_position IS very_left AND first_car_position IS close_left THEN move IS turn_right;
    RULE 2: IF car_position IS very_left AND first_car_position IS very_close THEN move IS turn_very_right;
    RULE 3: IF car_position IS very_left AND first_car_position IS close_right THEN move IS turn_very_right;
    RULE 4: IF car_position IS very_left AND first_car_position IS far_right THEN move IS keep;

    RULE 5: IF car_position IS left AND first_car_position IS far_left THEN move IS keep;
    RULE 6: IF car_position IS left AND first_car_position IS close_left THEN move IS turn_right;
    RULE 7: IF car_position IS left AND first_car_position IS very_close THEN move IS turn_very_right;
    RULE 8: IF car_position IS left AND first_car_position IS close_right THEN move IS turn_very_right;
    RULE 9: IF car_position IS left AND first_car_position IS far_right THEN move IS keep;

    RULE 10: IF car_position IS middle AND first_car_position IS far_left THEN move IS keep;
    RULE 11: IF car_position IS middle AND first_car_position IS close_left THEN move IS turn_right;
    RULE 12: IF car_position IS middle AND first_car_position IS very_close THEN move IS turn_very_right;
    RULE 13: IF car_position IS middle AND first_car_position IS close_right THEN move IS turn_very_right;
    RULE 14: IF car_position IS middle AND first_car_position IS far_right THEN move IS keep;


    RULE 15: IF car_position IS right AND first_car_position IS far_left THEN move IS keep;
    RULE 16: IF car_position IS right AND first_car_position IS close_left THEN move IS turn_left;
    RULE 17: IF car_position IS right AND first_car_position IS very_close THEN move IS turn_very_left;
    RULE 18: IF car_position IS right AND first_car_position IS close_right THEN move IS turn_very_left;
    RULE 19: IF car_position IS right AND first_car_position IS far_right THEN move IS keep;

    RULE 20: IF car_position IS very_right AND first_car_position IS far_left THEN move IS keep;
    RULE 21: IF car_position IS very_right AND first_car_position IS close_left THEN move IS turn_left;
    RULE 22: IF car_position IS very_right AND first_car_position IS very_close THEN move IS turn_very_left;
    RULE 23: IF car_position IS very_right AND first_car_position IS close_right THEN move IS turn_very_left;
    RULE 24: IF car_position IS very_right AND first_car_position IS far_right THEN move IS keep;

